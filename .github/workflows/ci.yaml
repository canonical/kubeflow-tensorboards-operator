name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '0 8 * * TUE'
  # Triggered on push by .github/workflows/release.yaml
  workflow_call:
    outputs:
      artifact-prefix:
        description: build_charm.yaml `artifact-prefix` output
        value: ${{ jobs.build.outputs.artifact-prefix }}
      charm-paths:
        description: paths for all charms in this repo
        value: ${{ jobs.get-charm-paths-channel.outputs.charm-paths }}
      channel:
        description: Charmhub channel the charms are released to
        value: ${{ jobs.get-charm-paths-channel.outputs.charm-channel }}

jobs:
  get-charm-paths-channel:
    name: Get charm paths and charmhub channel
    runs-on: ubuntu-latest
    outputs:
      charm-paths: ${{ steps.get-charm-paths.outputs.charm-paths }}
      charm-channel: ${{ steps.select-channel.outputs.name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get paths for all charms in this repo
        id: get-charm-paths
        uses: canonical/kubeflow-ci/actions/get-charm-paths@main
      - name: Select charmhub channel
        uses: canonical/charming-actions/channel@2.6.2
        id: select-channel

  lib-check:
    name: Check libraries
    needs:
      - get-charm-paths-channel
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: ${{ matrix.charm }}

  lint:
    name: Lint Check
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        charm: [tensorboard-controller, tensorboards-web-app]

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt install tox

    - name: Lint code
      run: tox -vve ${{ matrix.charm }}-lint

  unit:
    name: Unit Test
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        charm: [tensorboard-controller, tensorboards-web-app]

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt install tox

    - name: Run unit tests
      run: tox -vve ${{ matrix.charm }}-unit

  terraform-checks:
    name: Terraform
    needs:
      - get-charm-paths-channel
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/terraform-checks.yaml@main
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    with:
      charm-path: ${{ matrix.charm }}
      # Skipping the Terraform apply check as the tensorboard-controller goes to Waiting status
      # instead of the expected Blocked or Active. This is currently a limitation of the
      # Terraform re-usable workflows in canonical/charmed-kubeflow-workflows
      # See https://github.com/canonical/charmed-kubeflow-workflows/issues/65
      apply: false

  build:
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    name: Build charm | ${{ matrix.charm }}
    needs:
      - get-charm-paths-channel
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v29.0.0
    with:
      path-to-charm-directory: ${{ matrix.charm }}
    
  integration:
    name: Integration tests (microk8s)
    needs: build
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        charm: [tensorboard-controller, tensorboards-web-app]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          channel: 1.31-strict/stable
          juju-channel: 3.6/stable
          microk8s-addons: dns hostpath-storage ingress metallb:10.64.140.43-10.64.140.49


      - name: Download packed charm(s)
        id: download-charms
        timeout-minutes: 5
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build.outputs.artifact-prefix }}-*
          merge-multiple: true

      - run: |
          sg snap_microk8s -c "tox -vve ${{ matrix.charm }}-integration -- --charm-path=${{ github.workspace }}/charms/${{ matrix.charm }}/${{ matrix.charm }}_ubuntu@20.04-amd64.charm"

      # Collect debug logs if failed
      - name: Dump Juju/K8s logs on failure
        uses: canonical/charm-logdump-action@main
        if: failure()
        with:
          app: ${{ matrix.charm }}
          model: testing

  deploy:
    name: Integration Test
    needs: build
    runs-on: ubuntu-24.04
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
        provider: microk8s
        channel: 1.31-strict/stable
        juju-channel: 3.6/stable
        microk8s-addons: dns hostpath-storage ingress metallb:10.64.140.43-10.64.140.49

    - name: Download packed charm(s)
      id: download-charms
      timeout-minutes: 5
      uses: actions/download-artifact@v4
      with:
        pattern: ${{ needs.build.outputs.artifact-prefix }}-*
        merge-multiple: true

    - name: Run test
      run: |
        tox -e integration -- --charms-path=${{ github.workspace }}/charms/
                           
      # On failure, capture debugging resources
    - name: Get all
      run: kubectl get all -A
      if: failure()
    - name: Get gateway
      run: kubectl get gateway -A
      if: failure()
    - name: Describe deployments
      run: kubectl describe deployments -A
      if: failure()
    - name: Describe replicasets
      run: kubectl describe replicasets -A
      if: failure()
    - name: Get juju status
      run: juju status --relations
      if: failure()
    - name: Get tensorboard-controller logs
      run: kubectl logs -n testing --tail 1000 -ljuju-app=tensorboard-controller
      if: failure()
    - name: Get tensorboards-web-app logs
      run: kubectl logs -n testing --tail 1000 -ljuju-app=tensorboards-web-app
      if: failure()
    - name: Get tensorboard-controller operator logs
      run: kubectl logs -n testing --tail 1000 -ljuju-operator=tensorboard-controller
      if: failure()
    - name: Get tensorboards-web-app operator logs
      run: kubectl logs -n testing --tail 1000 -ljuju-operator=tensorboards-web-app
      if: failure()

  release:
    strategy:
      matrix:
        charm: ${{ fromJSON(needs.get-charm-paths-channel.outputs.charm-paths) }}
    name: Release charm to Charmhub branch | ${{ matrix.charm }}
    if: ${{ github.event_name == 'pull_request' }}
    needs:
      - get-charm-paths-channel
      - build
    uses: canonical/data-platform-workflows/.github/workflows/release_charm.yaml@v29.0.0
    with:
      channel: ${{ needs.get-charm-paths-channel.outputs.charm-channel }}
      artifact-prefix: ${{ needs.build.outputs.artifact-prefix }}
      path-to-charm-directory: ${{ matrix.charm }}
      create-git-tags: false
    secrets:
      charmhub-token: ${{ secrets.CHARMCRAFT_CREDENTIALS }}
