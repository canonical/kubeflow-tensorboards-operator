# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[flake8]
max-line-length = 100

[tox]
skipsdist = True
envlist = {tensorboard-controller,tensorboards-web-app}-{lint,unit,integration}

[vars]
all_path = {[vars]src_path} {[vars]tst_path}
tst_path = {toxinidir}/tests/

[testenv]
basepython = python3
allowlist_externals = tox
passenv =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    KUBECONFIG
ignore_errors=true
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]tst_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    tensorboard-controller: CHARM = tensorboard-controller
    tensorboards-web-app: CHARM = tensorboards-web-app
    lint: TYPE = lint
    unit: TYPE = unit
    integration: TYPE = integration
commands =
    tox -c {toxinidir}/charms/{env:CHARM} -vve {env:TYPE} -- {posargs}

[testenv:update-requirements]
allowlist_externals =
    bash
    find
    pip-compile
    xargs
commands =
    ; we must preserve the order of compilation, since each *.in file depends on some *.txt file.
    ; For example, requirements-unit.in depends on requirements.txt and we must compile first
    ; requirements.txt to ensure that requirements-unit.txt get the same dependency as the requirements.txt
    bash -c 'for pattern in "requirements.in" "requirements-fmt.in" "requirements*.in"; do find . -type f -name "$pattern" -exec bash -c "cd \$(dirname "{}") && pip-compile --resolver=backtracking \$(basename "{}")" \;; done'
deps =
    pip-tools
    # Pin due to https://github.com/jazzband/pip-tools/issues/2131
    pip==24.2
description = Update requirements files by executing pip-compile on all requirements*.in files, including those in subdirs.

[testenv:fmt]
commands =
    isort {[vars]tst_path}
    black {[vars]tst_path}
deps =
    -r requirements-fmt.txt
description = Apply coding style standards to code

[testenv:lint]
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir}/. --skip {toxinidir}/./.git --skip {toxinidir}/./.tox \
      --skip {toxinidir}/./build --skip {toxinidir}/./lib --skip {toxinidir}/./venv \
      --skip {toxinidir}/./.mypy_cache \
      --skip {toxinidir}/./charms \
      --skip {toxinidir}/./icon.svg --skip *.json.tmpl
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]tst_path}
    isort --check-only --diff {[vars]tst_path}
    black --check --diff {[vars]tst_path}
deps =
    -r requirements-lint.txt
description = Check code against coding style standards

[testenv:integration]
commands = pytest -v --tb native --asyncio-mode=auto {[vars]tst_path}integration --log-cli-level=INFO -s {posargs}
deps =
    -r requirements-integration.txt
description = Run integration tests
